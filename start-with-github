The Indian education system has been subject to a lot of criticism over the past decades, especially the discipline of engineering, and for good reason. The IT boom of the 80s and 90s in India, established Computer Science as the sure-shot course to a well-paying job, in the minds of Indian parents. Maybe up until a few years ago, this was the case. But not anymore, as is painfully evident from the number of computer students who report unemployment and unsatisfactory employment. Apart from this, the recent news on layoffs create a fear for job security in IT Industry.
Yes, the education system is flawed. It needs to undergo a revolutionary upheaval to ensure that the engineers it churns out are industry ready. Indian developers are notorious for being, on mediocre while working within the ecosystem. Foreign counterparts who often collaborate with the Indian developers, many times claim them to be amateurish and reluctant to try new paths. This is not because of the lack of capabilities of resources, but surely the underutilisation of their true potential. The reasons for that was what we discussed in previous article Is India a space of incompetent software developers?
Attempts to sort these issues have been underway for a while now. But are they good enough?
Technologies are taught across colleges from syllabus and students have access to ample sessions and workshops are conducted by various tech communities across. 
But if they are not enabled to make use of these learning to practice, how effective will the training get? How do you get the future-developers and existing-developers future-ready? How do you improve their quality?
At engineering colleges, don’t just prepare students to do well to in their examinations. A college should act as a simulation of the real world where the students get out to and help them prepared to adapt changes that come on their way. 
It is not just to simply dump the complex and often overwhelming theories and algorithms of exponential technologies on these students without getting their basement ready. This will simply scare them away from trying anything new ever again in their lives. Instead, make them primarily well versed in collaborative learning and development. 
Here’s my suggestion for a first step in the right direction- start with GitHub.
Learning the basics to work on GitHub, the code collaboration platform, enable them and others work together on projects from anywhere. This should in turn enable them to understand how a collaborative development environment works which is considered as the heart of Open source. 
To start with GitHub, you don’t even need to know how to code, use the command line, or install Git (the version control software GitHub is built on). All you need is a GitHub.com account and Internet access. 
Learn some basics even if you doesn’t know how to code. 
Now start with a simple project. A project to hosting and maintain your resume could be a good start. If you are a student, most probably you might be familiar with taking photocopies or notes and question papers just for exam preparation. Instead, type the questions in and create a repository of question papers. Share and challenge it with co students and let them contribute answers to that repo. Over the period, not only you get a well answered question paper repo, you learn the basics of collaborative contribution. 
Ask teachers to share notes via GitHub and taking dump photocopies. Make your academic project available in GitHub. 
These are just simple and easy steps anyone could start.
Once they understand its basics, they are getting enabled to work with the best resources available in the Industry. 
Then when you try and make your own open source contributions, your bar is raised- you are collaborating with world-class coders and you are held accountable for your codes- they are public! 
Active involvement with Open-source projects leads to a more diverse scope of development perspective than is possible by any one company. Now, when I say active involvement, it doesn’t mean just consumption of Open Source, but also contribution. CONTRIBUTE to the Open Source community regularly and with a purpose.
Why, you ask? Here’s why. Over and above the philanthropic aspect of Open Source, contributing to open source yourself will improve your coding capabilities exponentially, as you are getting a chance for your code to get evaluated by the developers who are already at higher industry standards. Slowly your code quality getting lifted toward theirs. 
After all, you are the average of the five people around you. So as far as you are surrounded by similar developers who lack initiative or quality of any kind, you can’t expect any better for yourself unless you make an active decision. 
 Not just students, this is exactly what we need to get any developer who are currently marinating in mediocrity, to break free of the trends they see around them.
If this doesn’t compel you to perform great, here is more..
All of the top companies have caught up to how indicative the GitHub profile of a developer is of his or her coding capabilities and attitude towards learning new things. An all-green GitHub gravitas is now indicative of the user’s worth from an employer/hiring point of view, and this is a habit that should be encouraged. This is also something that students and beginners should be aware of- that maintaining a good GitHub profile holds great value.
What is especially smart about this GitHub gravatar is that it helps keep track of every single input you have made. Your contributions are recordable and visible. Just the mere act of attempting to decode the high-quality codes on GitHub will be a great learning experience- the kind that will elude you forever if you are stuck with amateur developers who only do the bare minimum. 
If you don’t have it yet, start on your GitHub profile NOW. It’s not something you can build up overnight- it is a result of persistent and consistent contribution. That lit-up, green GitHub gravitas will only happen over a period of excellence. 
So to all wannabe-developers and professional developers who are looking to improve themselves and separate themselves from the herd- start with your GitHub TODAY!
Note for IT Companies:  
to build such a culture, our companies should also bring following to practice
Stop asking resume’s, to build this culture, ask for Github Profile of resources. This would in turn let you know everything you actually need to know about a resource.
Don’t tie your resources just on as opensource consumers, encourage them to contribute back to open source, at least the code they modified to make it working for your specific need at a project.
